stages:  
  - release
  - cleanup

release-job:
  image: docker:latest
  stage: release
  #services:
  #  - name: docker:dind
  #    command: ["--experimental"]
  before_script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY_URL
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=".$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - cat $CI_SSH_PRIVATE_KEY > ./ssh_key
    # build engine
    - docker build -t "$CI_REGISTRY_IMAGE${tag}" -f ./Dockerfile --build-arg CI_GITLAB_URL=$CI_GITLAB_URL --build-arg "GITLAB_SSH_KNOWN_HOSTS=$GITLAB_SSH_KNOWN_HOSTS" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"

  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_TAG
    - exists:
        - ./Dockerfile

cleanup_job:
  stage: cleanup
  script:
    - echo "Cleaning up %CACHE_PATH%/%CI_PIPELINE_ID%"
#  - rm -rf "%CACHE_PATH%/%CI_PIPELINE_ID%"
  when: always



